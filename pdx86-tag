#!/bin/bash

PROG_NAME="${0##*/}"
PROG_DIR="${0%/*}"

usage() {
	echo "Usage: $PROG_NAME <VERSION> <COMMIT>"
	echo "e.g. $PROG_NAME v4.4-2 for-next"
}

if [ $# -ne 2 ]; then
	echo $#
	usage
	exit 1
fi

VERSION="v${1##*v}"	# Always produce "v4.4-2"-like version
COMMIT=$2		# Whatever commit ID Git recognizes

# Perform a sanity check before creating the tag
$PROG_DIR/pdx86-cherry $2
if [ $? -ne 0 ]; then
	echo "Duplicate commits detected, tag anyway? [y/N] "
	read RESPONSE
	if [ ! "$RESPONSE" = "y" ] && [ ! "$RESPONSE" = "Y" ]; then
		exit 1
	fi
fi

TAG="platform-drivers-x86-$VERSION"

which tempfile &> /dev/null
if [ $? -eq 0 ]; then
	TMP=$(tempfile -s .pdx86-tag)
else
	which mktemp &> /dev/null
	if [ $? -eq 0 ]; then
		TMP=$(mktemp --suffix=.pdx86-tag)
	fi
fi
if [ -z "$TMP" ]; then
	echo "ERROR: Failed to create a suitable temp file"
	exit 1
fi


PREFIX=''
(
echo -e "platform-drivers-x86 for $VERSION\n";
echo "SHORT SUMMARY OF CHANGES FOR LINUS";
git log --pretty='format:%s' master..$COMMIT | \
sed -e "s/^platform\/x86: \?//" | \
while read line || [[ -n "$line" ]]; do
	NEW_PREFIX=$(echo $line | cut -d ':' -f 1)
	SUBJECT=$(echo $line | sed -e 's/^[^:]*: *\(.*\)/\1/')
	if [ ! "$PREFIX" = "$NEW_PREFIX" ]; then
		PREFIX="$NEW_PREFIX"
		echo -e "\n$PREFIX:"
	fi
	echo " - $SUBJECT"
done
) > $TMP
$EDITOR $TMP
git tag -s -F $TMP -a platform-drivers-x86-$VERSION $COMMIT
if [ $? -ne 0 ]; then
	echo "git tag failed. Edited tag message saved in $TMP."
	exit 1
fi

echo "Created tag: $TAG"
echo "Push with 'git push pdx86 $TAG'"
rm $TMP
